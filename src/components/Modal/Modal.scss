@charset "urf-8";
@import '@scss/partials/mixin.scss', '@scss/partials/theme.scss';
@import '@scss/partials/grid_system.scss', '@scss/partials/media_query.scss';
@import '@scss/partials/Typography.scss';

@mixin theme($theme, $grayscale-1, $grayscale-2, $grayscale-3, $grayscale-4) {
  .#{$theme} {
    .modal-container {
      width: 100%;
      height: 100%;
      z-index: 100;

      .modal-outer-wrap {
        width: 100%;
        height: 100%;
        position: fixed;
        inset: 0;
        background-color: $grayscale-1;
        opacity: 0.6;
      }

      .modal-box-container {
        width: 500px;
        height: 600px;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 20px;
        border-radius: 20px;
        background-color: $grayscale-4;
        z-index: 100;

        @include Mobile {
          width: 100%;
          height: 100vh;
          border-radius: 0;
        }

        .modal-header {
          position: relative;
          padding-bottom: 50px;
        }

        .modal-title {
          @include FlexCenter;
          width: 100%;
          height: 80px;
          font-size: 52px;
          font-weight: 700;
          color: $primary-color;
        }

        .modal-wrap-inner {
          width: 100%;
          //   height: 100%;
          padding: 20px;
        }
      }
    }
  }
}

// @each를 이용하여 테마를 적용하는데, in을 이용하여 $pallette를 순회하면서 각각의 테마를 적용시킵니다.
@each $theme, $grayscale-1, $grayscale-2, $grayscale-3,
  $grayscale-4 in $pallette
{
  // @mixin을 이용하여 생성한 테마를 @include를 이용하여 적용시킵니다.
  @include theme(
    $theme,
    $grayscale-1,
    $grayscale-2,
    $grayscale-3,
    $grayscale-4
  );
}
